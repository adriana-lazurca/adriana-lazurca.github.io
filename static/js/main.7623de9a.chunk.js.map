{"version":3,"sources":["reportWebVitals.js","components/timeline/job/Job.jsx","components/timeline/education/Education.jsx","components/timeline/Timeline.jsx","components/presentation/carousel/about/About.jsx","components/presentation/carousel/skills/Skills.jsx","components/presentation/carousel/languages/Languages.jsx","components/presentation/carousel/Carousel.jsx","components/presentation/contact/Contact.jsx","assets/images/adriana-big.jpg","components/presentation/introduction/Introduction.jsx","components/presentation/Presentation.jsx","components/navigation/Navigation.jsx","components/App.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Job","props","job","className","title","tasks","map","task","index","company","name","Education","education","type","Timeline","jobs","useState","cardPosition","id","About","personalInfo","about","Skills","groupedSkills","icon","technologie","Icon","iconName","size","React","createElement","Icons","style","fontSize","skill","technology","Languages","getLevel","level","value","languages","language","toUpperCase","width","infoOptions","Carousel","selectedInfo","setselectedInfo","showAbout","showSkills","showLanguages","onClick","currentIndex","indexOf","nextIndex","length","newSelectedInfo","Contact","place","href","target","rel","color","Introduction","fullName","firstName","lastName","src","bigPhoto","alt","jobTitle","Presentation","Navigation","smooth","to","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"y3IAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,qDCLDQ,EAAM,SAACC,GACjB,IAAQC,EAAQD,EAARC,IAER,OACG,qBAAKC,UAAU,MAAf,SACG,qCACG,6BAAKD,EAAIE,QACT,6BACIF,EAAIG,MAAMC,KAAI,SAACC,EAAMC,GAAP,OACZ,6BAA8CD,GAA9C,cAAgBL,EAAIO,QAAQC,KAA5B,YAAoCF,eCXzCG,EAAY,SAACV,GACvB,IAAQW,EAAcX,EAAdW,UAER,OACG,mCACG,6BAAKA,EAAUC,UCEXC,G,MAAW,SAACb,GACtB,IAAQc,EAAoBd,EAApBc,KAAMH,EAAcX,EAAdW,UAEd,EAAwCI,mBAAS,QAAjD,mBAAOC,EAAP,UAEA,OACG,sBAAKd,UAAU,WAAf,UACIY,GACEA,EAAKT,KAAI,SAACJ,EAAKM,GAAN,OACN,qBAEGU,GAAG,aACHf,UAAS,yBACW,SAAjBc,EAA0B,uBAAyB,yBAJzD,SAOG,qBAAKd,UAAU,yBAAf,SACG,cAAC,EAAD,CAAKD,IAAKA,OARhB,cACeA,EAAIE,MADnB,YAC4BI,OAWjCI,GACEA,EAAUN,KAAI,SAACM,EAAWJ,GAAZ,OACX,qBAEGU,GAAG,YACHf,UAAS,yBACW,SAAjBc,EAA0B,uBAAyB,yBAJzD,SAOG,qBAAKd,UAAU,yBAAf,SACG,cAAC,EAAD,CAAWS,UAAWA,OAR5B,cACeA,EAAUC,KADzB,YACiCL,YC7BnCW,G,MAAQ,SAAClB,GACnB,IAAQmB,EAAiBnB,EAAjBmB,aACR,OACG,sBAAKjB,UAAU,cAAf,UACG,sBAAMA,UAAU,wBAAhB,oBACA,mBAAGA,UAAU,oBAAb,SAAkCiB,GAAgBA,EAAaC,a,QCF3DC,G,MAAS,SAACrB,GAsBpB,IAAMsB,EAAgB,CACnB,CACGC,KAAM,UACNd,KAAM,QACNe,YAAa,IAEhB,CACGD,KAAM,eACNd,KAAM,aACNe,YAAa,CAAC,MAAO,UAQxB,CACGD,KAAM,SACNd,KAAM,OACNe,YAAa,CAAC,OAAQ,cAGzB,CACGD,KAAM,kBACNd,KAAM,SACNe,YAAa,CAAC,QAAS,OAAQ,SAAU,eAIzCC,EAAO,SAACzB,GACX,IAAQ0B,EAAmB1B,EAAnB0B,SAAUC,EAAS3B,EAAT2B,KACZJ,EAAOK,IAAMC,cAAcC,EAAMJ,IACvC,OAAO,mBAAGxB,UAAU,OAAO6B,MAAO,CAAEC,SAAUL,GAAvC,SAA+CJ,KAGzD,OACG,mCACG,qBAAKrB,UAAU,SAAf,SACIoB,GACEA,EAAcjB,KAAI,SAAC4B,EAAO1B,GAAR,OACf,sBAA0CL,UAAU,QAApD,UACI,cAACuB,EAAD,CAAME,KAAM,GAAID,SAAUO,EAAMV,OAChC,4BAAIU,EAAMxB,OACX,6BACIwB,EAAMT,YAAYnB,KAAI,SAAC6B,GAAD,OACpB,6BAAKA,WALd,gBAAmBD,EAAMxB,KAAzB,YAAiCF,aClEtC4B,G,MAAY,SAACnC,GACvB,IAAQmB,EAAiBnB,EAAjBmB,aAEFiB,EAAW,SAACC,GACf,IAAIC,EAAQ,EAEZ,OAAQD,GACL,IAAK,aACFC,EAAQ,MACR,MACH,IAAK,SACFA,EAAQ,MACR,MACH,QACGA,EAAQ,OAGd,OAAOA,GAGV,OACG,qBAAKpC,UAAU,YAAf,SACIiB,GACEA,EAAaoB,UAAUlC,KAAI,SAACmC,EAAUjC,GAAX,OACxB,sBAAgDL,UAAU,sBAA1D,UACG,sBAAKA,UAAU,kCAAf,UACG,mBAAGA,UAAU,iBAAb,SAA+BsC,EAAS/B,KAAKgC,gBAC7C,uCAAQD,EAASH,YAEpB,qBAAKnC,UAAU,0BAAf,SACG,qBAAKA,UAAU,uBAAuB6B,MAAO,CAAEW,MAAON,EAASI,EAASH,cAN9E,mBAAsBG,EAAS/B,KAA/B,YAAuCF,WCnBhDoC,G,MAAc,CAAC,QAAS,SAAU,cAE3BC,EAAW,SAAC5C,GACtB,IAAQmB,EAAkCnB,EAAlCmB,aAAcL,EAAoBd,EAApBc,KAAMH,EAAcX,EAAdW,UAE5B,EAAwCI,mBAAS,SAAjD,mBAAO8B,EAAP,KAAqBC,EAArB,KAEMC,EAA6B,UAAjBF,EACZG,EAA8B,WAAjBH,EACbI,EAAiC,cAAjBJ,EAkBtB,OACG,qBAAK3C,UAAU,WAAf,SACG,sBAAKA,UAAU,iBAAf,UACG,sBAAKA,UAAU,yBAAf,UACI6C,GAAa,cAAC,EAAD,CAAO5B,aAAcA,IAClC6B,GAAc,cAAC,EAAD,CAAQlC,KAAMA,EAAMH,UAAWA,IAC7CsC,GAAiB,cAAC,EAAD,CAAW9B,aAAcA,IAC3C,wBAAQjB,UAAU,iBAAiBgD,QAf5B,WAChB,IAAMC,EAAeR,EAAYS,QAAQP,GACnCQ,EAA6B,IAAjBF,EAAqBR,EAAYW,OAAS,EAAIH,EAAe,EACzEI,EAAkBZ,EAAYU,GAEpCP,EAAgBS,IAUP,eAGA,wBAAQrD,UAAU,iBAAiBgD,QA1B5B,WAChB,IAAMC,EAAeR,EAAYS,QAAQP,GACnCQ,EAAYF,IAAiBR,EAAYW,OAAS,EAAI,EAAIH,EAAe,EACzEI,EAAkBZ,EAAYU,GAEpCP,EAAgBS,IAqBP,kBAKH,qBAAKrD,UAAU,yBAAf,SACG,+BACG,oBACGA,UAAS,iBAAY6C,EAAY,iBAAmB,oBACpDG,QAAS,kBAAMJ,EAAgB,UAFlC,mBAOA,oBACG5C,UAAS,iBAAY8C,EAAa,iBAAmB,oBACrDE,QAAS,kBAAMJ,EAAgB,WAFlC,oBAOA,oBACG5C,UAAS,iBAAY+C,EAAgB,iBAAmB,oBACxDC,QAAS,kBAAMJ,EAAgB,cAFlC,kC,uBCnDLU,G,MAAU,WACpB,OACG,sBAAKtD,UAAU,UAAf,UACG,cAAC,IAAD,CAAcuD,MAAM,WACpB,qBAAIvD,UAAU,gBAAd,UACG,6BACG,oBAAGwD,KAAK,yCAAyCC,OAAO,SAASC,IAAI,aAArE,UACI,IACD,cAAC,IAAD,CAAiBC,MAAM,QAAQ,WAAS,yBAI9C,6BACG,mBAAGH,KAAK,8CAA8CC,OAAO,SAASC,IAAI,aAA1E,SACG,cAAC,IAAD,CAAmBC,MAAM,QAAQ,WAAS,wBAIhD,6BACG,cAAC,IAAD,CAAeA,MAAM,QAAQ,WAAS,2BAGzC,6BACG,cAAC,IAAD,CAAeA,MAAM,QAAQ,WAAS,yCCrCtC,MAA0B,wCCK5BC,G,kBAAe,SAAC9D,GAC1B,IAAQmB,EAAiBnB,EAAjBmB,aACF4C,EAAW,UAAG5C,EAAa6C,UAAhB,YAA6B7C,EAAa8C,UAAWxB,cAEtE,OACG,sBAAKvC,UAAU,eAAf,UACG,qBAAKA,UAAU,oBAAf,SACG,qBAAKgE,IAAKC,EAAUC,IAAI,cAE3B,sBAAKlE,UAAU,sBAAf,UACG,mBAAGA,UAAU,WAAb,SAAyB6D,IACzB,mBAAG7D,UAAU,UAAb,SAAwBiB,EAAakD,mB,QCZpCC,G,MAAe,SAACtE,GAC1B,IAAQc,EAAoBd,EAApBc,KAAMH,EAAcX,EAAdW,UAEd,OACG,sBAAKT,UAAU,eAAee,GAAG,OAAjC,UACG,cAAC,EAAD,CAAcE,aAAcA,IAC5B,cAAC,EAAD,CAAUA,aAAcA,EAAcL,KAAMA,EAAMH,UAAWA,IAC7D,cAAC,EAAD,S,OCPI4D,G,MAAa,kBACvB,qBAAKrE,UAAU,aAAf,SACG,+BACG,6BACG,cAAC,IAAD,CAAUsE,QAAM,EAACC,GAAG,QAApB,oBAIH,6BACG,cAAC,IAAD,CAAUD,QAAM,EAACC,GAAG,cAApB,0BAIH,6BACG,cAAC,IAAD,CAAUD,QAAM,EAACC,GAAG,aAApB,gCCTCC,G,MAAM,WAChB,OACG,cAAC,IAAD,UACG,sBAAKxE,UAAU,MAAf,UACG,sBAAKA,UAAU,eAAf,UACG,cAAC,EAAD,CAAcY,KAAMA,EAAMH,UAAWA,IACrC,cAAC,EAAD,CAAUG,KAAMA,EAAMH,UAAWA,OAEpC,cAAC,EAAD,WCVZgE,IAASC,OACN,cAAC,IAAMC,WAAP,UACG,cAAC,EAAD,MAEHC,SAASC,eAAe,SAM3BzF,M","file":"static/js/main.7623de9a.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './job.scss';\r\n\r\nexport const Job = (props) => {\r\n   const { job } = props;\r\n\r\n   return (\r\n      <div className='job'>\r\n         <>\r\n            <h2>{job.title}</h2>\r\n            <ul>\r\n               {job.tasks.map((task, index) => (\r\n                  <li key={`job-${job.company.name}-${index}`}>{task}</li>\r\n               ))}\r\n            </ul>\r\n         </>\r\n      </div>\r\n   );\r\n};\r\n","export const Education = (props) => {\r\n   const { education } = props;\r\n\r\n   return (\r\n      <>\r\n         <h2>{education.type}</h2>\r\n      </>\r\n   );\r\n};\r\n","import { useState } from 'react';\r\n\r\nimport { Job } from './job';\r\nimport { Education } from './education';\r\n\r\nimport './timeline.scss';\r\n\r\nexport const Timeline = (props) => {\r\n   const { jobs, education } = props;\r\n\r\n   const [cardPosition, setCardPosition] = useState('left');\r\n\r\n   return (\r\n      <div className='timeline'>\r\n         {jobs &&\r\n            jobs.map((job, index) => (\r\n               <div\r\n                  key={`job-${job.title}-${index}`}\r\n                  id='experience'\r\n                  className={`timeline__card ${\r\n                     cardPosition === 'left' ? 'timeline__card--left' : 'timeline__card--right'\r\n                  }`}\r\n               >\r\n                  <div className='timeline__card-content'>\r\n                     <Job job={job} />\r\n                  </div>\r\n               </div>\r\n            ))}\r\n         {education &&\r\n            education.map((education, index) => (\r\n               <div\r\n                  key={`job-${education.type}-${index}`}\r\n                  id='education'\r\n                  className={`timeline__card ${\r\n                     cardPosition === 'left' ? 'timeline__card--left' : 'timeline__card--right'\r\n                  }`}\r\n               >\r\n                  <div className='timeline__card-content'>\r\n                     <Education education={education} />\r\n                  </div>\r\n               </div>\r\n            ))}\r\n      </div>\r\n   );\r\n};\r\n","import './about.scss'\r\n\r\nexport const About = (props) => {\r\n   const { personalInfo } = props;\r\n   return (\r\n      <div className='description'>\r\n         <span className='description__greeting'>Hello!</span>\r\n         <p className='description__text'>{personalInfo && personalInfo.about}</p>\r\n      </div>\r\n   );\r\n};\r\n","import * as Icons from 'react-icons/di';\r\nimport React from 'react';\r\n\r\nimport './skills.scss';\r\n\r\nexport const Skills = (props) => {\r\n   //const { jobs, education } = props;\r\n\r\n   // const jobSkills = jobs.map((job) => job.skills);\r\n   // const educationSkills = education.map((education) => education.skills);\r\n\r\n   // const allSkills = [].concat(...jobSkills, ...educationSkills);\r\n\r\n   // const groupedSkills = [];\r\n\r\n   // allSkills.forEach((skill) => {\r\n   //    const matchedSkill = groupedSkills.find((element) => element.type === skill.type);\r\n\r\n   //    if (!matchedSkill) {\r\n   //       groupedSkills.push(skill);\r\n   //       return;\r\n   //    }\r\n\r\n   //    const technologies = matchedSkill.technologies.concat(skill.technologies);\r\n   //    matchedSkill.technologies = [...new Set(technologies)];\r\n   // });\r\n\r\n   const groupedSkills = [\r\n      {\r\n         icon: 'DiReact',\r\n         name: 'React',\r\n         technologie: [],\r\n      },\r\n      {\r\n         icon: 'DiJavascript',\r\n         name: 'JavaScript',\r\n         technologie: ['ES6', 'Redux'],\r\n      },\r\n\r\n      // {\r\n      //    icon: 'DiHtml5',\r\n      //    name: 'Html',\r\n      //    technologie: [],\r\n      // },\r\n      {\r\n         icon: 'DiCss3',\r\n         name: 'CSS3',\r\n         technologie: ['SASS', 'Bootstrap'],\r\n      },\r\n\r\n      {\r\n         icon: 'DiMootoolsBadge',\r\n         name: 'Others',\r\n         technologie: ['HTML5', 'Jira', 'GitHub', 'BitBucket'],\r\n      },\r\n   ];\r\n\r\n   const Icon = (props) => {\r\n      const { iconName, size } = props;\r\n      const icon = React.createElement(Icons[iconName]);\r\n      return <p className=\"icon\" style={{ fontSize: size}}>{icon}</p>;\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <div className='skills'>\r\n            {groupedSkills &&\r\n               groupedSkills.map((skill, index) => (\r\n                  <div key={`skill-${skill.name}-${index}`} className='skill'>\r\n                     {<Icon size={20} iconName={skill.icon} />}\r\n                     {<p>{skill.name}</p>}\r\n                     <ul>\r\n                        {skill.technologie.map((technology) => (\r\n                           <li>{technology}</li>\r\n                        ))}\r\n                     </ul>\r\n                  </div>\r\n               ))}\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n","import './languages.scss';\r\n\r\nexport const Languages = (props) => {\r\n   const { personalInfo } = props;\r\n\r\n   const getLevel = (level) => {\r\n      let value = 0;\r\n\r\n      switch (level) {\r\n         case 'elementary':\r\n            value = '20%';\r\n            break;\r\n         case 'fluent':\r\n            value = '80%';\r\n            break;\r\n         default:\r\n            value = '100%';\r\n      }\r\n\r\n      return value;\r\n   };\r\n\r\n   return (\r\n      <div className='container'>\r\n         {personalInfo &&\r\n            personalInfo.languages.map((language, index) => (\r\n               <div key={`language-${language.name}-${index}`} className='container__language'>\r\n                  <div className='container__language-description'>\r\n                     <p className='language__name'>{language.name.toUpperCase()}</p>\r\n                     <p>{` ${language.level}`}</p>\r\n                  </div>\r\n                  <div className='container__language-bar'>\r\n                     <div className='language-bar__filler' style={{ width: getLevel(language.level) }}></div>\r\n                  </div>\r\n               </div>\r\n            ))}\r\n      </div>\r\n   );\r\n};\r\n","import { useState } from 'react';\r\n\r\nimport { About } from './about';\r\nimport { Skills } from './skills';\r\nimport { Languages } from './languages';\r\nimport './carousel.scss';\r\n\r\nconst infoOptions = ['about', 'skills', 'languages'];\r\n\r\nexport const Carousel = (props) => {\r\n   const { personalInfo, jobs, education } = props;\r\n\r\n   const [selectedInfo, setselectedInfo] = useState('about');\r\n\r\n   const showAbout = selectedInfo === 'about';\r\n   const showSkills = selectedInfo === 'skills';\r\n   const showLanguages = selectedInfo === 'languages';\r\n\r\n   const toggleNext = () => {\r\n      const currentIndex = infoOptions.indexOf(selectedInfo);\r\n      const nextIndex = currentIndex === infoOptions.length - 1 ? 0 : currentIndex + 1;\r\n      const newSelectedInfo = infoOptions[nextIndex];\r\n\r\n      setselectedInfo(newSelectedInfo);\r\n   };\r\n\r\n   const togglePrev = () => {\r\n      const currentIndex = infoOptions.indexOf(selectedInfo);\r\n      const nextIndex = currentIndex === 0 ? infoOptions.length - 1 : currentIndex - 1;\r\n      const newSelectedInfo = infoOptions[nextIndex];\r\n\r\n      setselectedInfo(newSelectedInfo);\r\n   };\r\n\r\n   return (\r\n      <div className='carousel'>\r\n         <div className='carousel__card'>\r\n            <div className='carousel__card-content'>\r\n               {showAbout && <About personalInfo={personalInfo} />}\r\n               {showSkills && <Skills jobs={jobs} education={education} />}\r\n               {showLanguages && <Languages personalInfo={personalInfo} />}\r\n               <button className='carousel__prev' onClick={togglePrev}>\r\n                  &lt;\r\n               </button>\r\n               <button className='carousel__next' onClick={toggleNext}>\r\n                  &gt;\r\n               </button>\r\n            </div>\r\n\r\n            <div className='carousel__card-buttons'>\r\n               <ul>\r\n                  <li\r\n                     className={`button ${showAbout ? 'button--active' : 'button--inactive'}`}\r\n                     onClick={() => setselectedInfo('about')}\r\n                  >\r\n                     About\r\n                  </li>\r\n\r\n                  <li\r\n                     className={`button ${showSkills ? 'button--active' : 'button--inactive'}`}\r\n                     onClick={() => setselectedInfo('skills')}\r\n                  >\r\n                     Skills\r\n                  </li>\r\n\r\n                  <li\r\n                     className={`button ${showLanguages ? 'button--active' : 'button--inactive'}`}\r\n                     onClick={() => setselectedInfo('languages')}\r\n                  >\r\n                     Languages\r\n                  </li>\r\n               </ul>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n","import { AiOutlineGithub, AiOutlineLinkedin, AiOutlineMail } from 'react-icons/ai';\r\nimport { RiDiscordLine } from 'react-icons/ri';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nimport './contact.scss';\r\n\r\n// todo - refactor using the following structure; no hardcoded stuff\r\nconst contactItems = [\r\n   {\r\n      url: 'https://www.github.com/adriana-lazurca',\r\n      tooltip: 'adriana-lazurca'\r\n   }\r\n];\r\n\r\nexport const Contact = () => {\r\n   return (\r\n      <div className='contact'>\r\n         <ReactTooltip place='bottom' />\r\n         <ul className='contact__list'>\r\n            <li>\r\n               <a href='https://www.github.com/adriana-lazurca' target='_blank' rel=\"noreferrer\">\r\n                  {' '}\r\n                  <AiOutlineGithub color='black' data-tip='adriana-lazurca' />\r\n                  {/* <ReactTooltip place='bottom' /> */}\r\n               </a>\r\n            </li>\r\n            <li>\r\n               <a href='https://www.linkedin.com/in/adriana-lazurca' target='_blank' rel=\"noreferrer\">\r\n                  <AiOutlineLinkedin color='black' data-tip='adriana-lazurca' />\r\n               </a>\r\n               {/* <ReactTooltip place='bottom' /> */}\r\n            </li>\r\n            <li>\r\n               <RiDiscordLine color='black' data-tip='Adriana Lazurca#5360' />\r\n               {/* <ReactTooltip place='bottom' /> */}\r\n            </li>\r\n            <li>\r\n               <AiOutlineMail color='black' data-tip='adrianar.lazurca@gmail.com' />\r\n               {/* <ReactTooltip place='bottom' /> */}\r\n            </li>\r\n         </ul>\r\n      </div>\r\n   );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/adriana-big.69a159d6.jpg\";","import bigPhoto from '../../../assets/images/adriana-big.jpg';\r\nimport '../../../assets/styles/variables/_breakpoints.scss';\r\nimport '../../../assets/styles/fonts.scss';\r\nimport './introduction.scss';\r\n\r\nexport const Introduction = (props) => {\r\n   const { personalInfo } = props;\r\n   const fullName = `${personalInfo.firstName} ${personalInfo.lastName}`.toUpperCase();\r\n\r\n   return (\r\n      <div className='introduction'>\r\n         <div className='introduction__img'>\r\n            <img src={bigPhoto} alt='adriana' />\r\n         </div>\r\n         <div className='introduction__title'>\r\n            <p className='text-2xl'>{fullName}</p>\r\n            <p className='text-lg'>{personalInfo.jobTitle}</p>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n","import personalInfo from '../../assets/cv-data/personal-info.json';\r\nimport { Introduction, Carousel, Contact } from './index';\r\nimport './presentation.scss';\r\n\r\nexport const Presentation = (props) => {\r\n   const { jobs, education } = props;\r\n\r\n   return (\r\n      <div className='presentation' id=\"home\">\r\n         <Introduction personalInfo={personalInfo} />\r\n         <Carousel personalInfo={personalInfo} jobs={jobs} education={education} />\r\n         <Contact />\r\n      </div>\r\n   );\r\n};\r\n","import { HashLink } from 'react-router-hash-link';\r\n\r\nimport './navigation.scss';\r\n\r\nexport const Navigation = () => (\r\n   <div className='navigation'>\r\n      <ul>\r\n         <li>\r\n            <HashLink smooth to='#home' >\r\n               Home\r\n            </HashLink>\r\n         </li>\r\n         <li>\r\n            <HashLink smooth to='#experience'>\r\n               Experience\r\n            </HashLink>\r\n         </li>\r\n         <li>\r\n            <HashLink smooth to='#education'>\r\n               Education\r\n            </HashLink>\r\n         </li>\r\n      </ul>\r\n   </div>\r\n);\r\n","import { BrowserRouter } from 'react-router-dom';\r\n\r\nimport education from '../assets/cv-data/education.json';\r\nimport jobs from '../assets/cv-data/jobs.json';\r\nimport { Timeline } from './timeline';\r\nimport { Presentation } from './presentation/index';\r\nimport { Navigation } from './navigation';\r\nimport './app.scss';\r\n\r\nexport const App = () => {\r\n   return (\r\n      <BrowserRouter>\r\n         <div className='app'>\r\n            <div className='app__content'>\r\n               <Presentation jobs={jobs} education={education} />\r\n               <Timeline jobs={jobs} education={education} />\r\n            </div>\r\n            <Navigation />\r\n         </div>\r\n      </BrowserRouter>\r\n   );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\n\nimport './index.css';\nimport { App } from '../src/components';\n\nReactDOM.render(\n   <React.StrictMode>\n      <App />\n   </React.StrictMode>,\n   document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}